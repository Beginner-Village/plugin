# HiAgent Plugin Runtime Simple Image (无网络依赖版本)
# 专门为网络受限环境或代理环境设计
FROM python:3.11-slim

# 设置环境变量
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PYTHONPATH=/app \
    SERVICE_TYPE=api

# 设置工作目录
WORKDIR /app

# 复制依赖文件
COPY requirements.txt pyproject.toml ./

# 升级 pip 并安装 Python 依赖 (使用 --no-deps 避免网络问题)
RUN pip install --no-cache-dir --upgrade pip || true && \
    pip install --no-cache-dir granian fastapi uvicorn redis || true && \
    pip install --no-cache-dir -r requirements.txt --no-deps || \
    pip install --no-cache-dir fastapi uvicorn redis pydantic

# 复制并安装 SDK
COPY hiagent-plugin-sdk/ ./hiagent-plugin-sdk/
RUN cd hiagent-plugin-sdk && \
    pip install -e . --no-deps && \
    cd ..

# 复制应用代码
COPY app/ ./app/
COPY main.py worker.py ./

# 复制部署脚本
COPY deploy/ ./deploy/

# 复制配置文件
COPY config.yaml docker-config.yaml ./
COPY config-example.yaml ./

# 创建必要的目录
RUN mkdir -p /app/extensions /tmp/hiagent_storage /app/logs

# 设置执行权限
RUN chmod +x deploy/entrypoint.sh || true

# 验证基本安装 (允许失败)
RUN python -c "import sys; print('Python:', sys.version)" && \
    python -c "from hiagent_plugin_sdk import __version__; print(f'SDK version: {__version__}')" || \
    echo "SDK validation skipped" && \
    python -c "from app.config import load; print('App config validation passed')" || \
    echo "App config validation skipped"

# 暴露端口
EXPOSE 8000

# 简化的健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD python -c "import sys; sys.exit(0)" || exit 1

# 设置容器启动命令
ENTRYPOINT ["deploy/entrypoint.sh"]